name: Project-dashboard PR test

on: pull_request

jobs:
  staging:
    runs-on: ubuntu-latest
    env:
      REACT_APP_FIREBASE_APP_ID_PR: ${{ secrets.REACT_APP_FIREBASE_APP_ID_PR }}
      REACT_APP_FIREBASE_AUTH_DOMAIN_PR: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN_PR }}
      REACT_APP_FIREBASE_DATABASE_PR: ${{ secrets.REACT_APP_FIREBASE_DATABASE_PR }}
      REACT_APP_FIREBASE_KEY_PR: ${{ secrets.REACT_APP_FIREBASE_KEY_PR }}
      REACT_APP_FIREBASE_MEASUREMENT_ID_PR: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID_PR }}
      REACT_APP_FIREBASE_PROJECT_ID_PR: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID_PR }}
      REACT_APP_FIREBASE_SENDER_ID_PR: ${{ secrets.REACT_APP_FIREBASE_SENDER_ID_PR }}
      REACT_APP_FIREBASE_STORAGE_BUCKET_PR: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET_PR }}
      REACT_APP_DEPLOY_ENV: pr
      CI: 1
    steps:
      - uses: actions/checkout@master
        with:
            submodules: true
      - uses: actions/setup-node@master
      - name: Install front end dependencies 
        run: npm ci
      - name: Front-end unittests
        run: npm run test -- --coverage
      - name: Eslint test
        run: ./node_modules/.bin/eslint --ext .jsx --ext .js .
      - name: Build front-end
        run: npm run build
      - name: Deploy firebase to PR env
        uses: w9jds/firebase-action@master
        with:
          args: deploy -P roster-pr --only hosting:project-dashboard-pull-request
        env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

